//1.
import java.util.List;

public class GenericOperations {
    public static <T extends Number> int countOddIntegers(List<T> list) {
        int count = 0;
        for (T element : list) {
            if (element.intValue() % 2 != 0) {
                count++;
            }
        }
        return count;
    }

    public static <T> void exchangeElements(T[] array, int index1, int index2) {
        if (index1 >= 0 && index1 < array.length && index2 >= 0 && index2 < array.length) {
            T temp = array[index1];
            array[index1] = array[index2];
            array[index2] = temp;
        } else {
            System.out.println("Invalid indices");
        }
    }

    public static <T extends Comparable<T>> T findMaxElementInRange(List<T> list, int begin, int end) {
        if (begin >= 0 && end < list.size() && begin <= end) {
            T maxElement = list.get(begin);
            for (int i = begin + 1; i <= end; i++) {
                if (list.get(i).compareTo(maxElement) > 0) {
                    maxElement = list.get(i);
                }
            }
            return maxElement;
        } else {
            throw new IllegalArgumentException("Invalid range");
        }
    }

    public static void main(String[] args) {
        // Example usage
        List<Integer> integerList = List.of(1, 2, 3, 4, 5, 6, 7, 8, 9);
        System.out.println("Number of odd integers: " + countOddIntegers(integerList));

        Integer[] integerArray = {1, 2, 3, 4, 5};
        exchangeElements(integerArray, 1, 3);
        System.out.println("Array after exchanging elements: " + java.util.Arrays.toString(integerArray));

        List<Integer> anotherIntegerList = List.of(3, 7, 1, 9, 4, 6, 2, 8, 5);
        int beginIndex = 2;
        int endIndex = 6;
        Integer maxElement = findMaxElementInRange(anotherIntegerList, beginIndex, endIndex);
        System.out.println("Max element in the range: " + maxElement);
    }
}

//2.
public class GenericSearch {
    public static <T> boolean searchElement(T[] array, T target) {
        for (T element : array) {
            if (element.equals(target)) {
                return true; // Element found
            }
        }
        return false; // Element not found
    }

    public static void main(String[] args) {
        // Example usage with Integer array
        Integer[] integerArray = {1, 2, 3, 4, 5};
        int targetInteger = 3;

        if (searchElement(integerArray, targetInteger)) {
            System.out.println(targetInteger + " found in the array.");
        } else {
            System.out.println(targetInteger + " not found in the array.");
        }

        // Example usage with String array
        String[] stringArray = {"apple", "banana", "orange", "grape"};
        String targetString = "orange";

        if (searchElement(stringArray, targetString)) {
            System.out.println(targetString + " found in the array.");
        } else {
            System.out.println(targetString + " not found in the array.");
        }
    }
}
